
---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app audiobookshelf
spec:
  timeout: 5m
  interval: 30m
  chartRef:
    kind: OCIRepository
    name: app-template
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  dependsOn:
    - name: truenas-iscsi-stash
      namespace: democratic-csi
    - name: truenas-stash
      namespace: democratic-csi
  values:
    fullnameOverride: *app
    controllers:
      app:
        annotations:
          reloader.stakater.com/auto: "true"
        strategy: Recreate
        initContainers:
          restore:
            securityContext:
              allowPrivilegeEscalation: true
              readOnlyRootFilesystem: true
              runAsUser: 0
              runAsGroup: 0
              fsGroup: 0
              supplementalGroups: [0, 1, 44, 109, 303, 568, 10000]
              capabilities: { drop: ["ALL"] }
            image:
              repository: busybox
              tag: 1.37.0
              pullPolicy: IfNotPresent
            command:
              - "/bin/sh"
              - "-c"
            args: |-
                chown -R 568:568 /config
                chmod -R 777 /config
                echo "Done.";
        containers:
          app:
            image:
              repository: ghcr.io/advplyr/audiobookshelf
              tag: 2.20.0
            # -- environment variables.
            # See [image docs](https://github.com/dani-garcia/vaultwarden/blob/main/.env.template) for more details.
            env:
              AUDIOBOOKSHELF_UID: 568
              AUDIOBOOKSHELF_GID: 568
              CONFIG_PATH: /config
              METADATA_PATH: /config/metadata
              UMASK: 002
              TZ: America/New_York
            probes:
              liveness: &probes
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /healthcheck
                    port: &port 80
                  initialDelaySeconds: 0
                  periodSeconds: 10
                  timeoutSeconds: 1
                  failureThreshold: 3
              readiness: *probes
            securityContext:
              runAsNonRoot: true
              runAsUser: 568
              runAsGroup: 568
              fsGroup: 568
              supplementalGroups: [0, 1, 44, 109, 303, 568, 10000]
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: false
              capabilities: { drop: ["ALL"] }
            resources:
              requests:
                cpu: 100m
                memory: 100Mi
              limits:
                cpu: 1000m
                memory: 2Gi

    defaultPodOptions:
      securityContext:
        fsGroupChangePolicy: OnRootMismatch
        seccompProfile: { type: RuntimeDefault }

    # -- Configures service settings for the chart.
    service:
      app:
        controller: app
        type: ClusterIP
        ports:
          http:
            port: *port


    persistence:
      config:
        existingClaim: audiobookshelf-config
      media-books:
        existingClaim: media-books
        globalMounts:
          - path: /media/books
      media-audiobooks:
        existingClaim: media-audiobooks
        globalMounts:
          - path: /media/audiobooks


    ingress:
      app:
        className: internal
        hosts:
          - host: "{{ .Release.Name }}.${ROOT_DOMAIN}"
            paths:
              - path: /
                pathType: Prefix
                service:
                  identifier: app
                  port: *port
        annotations:
          reloader.stakater.com/auto: "true"
          external-dns.alpha.kubernetes.io/target: "${INTERNAL_DOMAIN}"
          gethomepage.dev/widget.url: "http://{{ .Release.Name }}.${INTERNAL_CLUSTER_SERVICE}:80"
          # gethomepage.dev/widget.key: ""
          gethomepage.dev/enabled: "true"
          gethomepage.dev/group: Media
          gethomepage.dev/icon: audiobookshelf.svg
          gethomepage.dev/name: AudioBookShelf
          gethomepage.dev/widget.type: audiobookshelf
          gethomepage.dev/namespace: "{{ .Release.Namespace }}" # The kubernetes namespace the app resides in
          gethomepage.dev/app: "{{ .Release.Name }}"
