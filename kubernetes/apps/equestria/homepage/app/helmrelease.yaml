---
# yaml-language-server: $schema=https://raw.githubusercontent.com/fluxcd-community/flux2-schemas/main/ocirepository-source-v1beta2.json
apiVersion: source.toolkit.fluxcd.io/v1beta2
kind: OCIRepository
metadata:
  name: homepage
spec:
  interval: 1h
  layerSelector:
    mediaType: application/vnd.cncf.helm.chart.content.v1.tar+gzip
    operation: copy
  ref:
    tag: 10.1.1
  url: oci://tccr.io/truecharts/homepage
---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app library
spec:
  timeout: 5m
  interval: 30m
  chartRef:
    kind: OCIRepository
    name: homepage
  install:
    crds: CreateReplace
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    crds: CreateReplace
    remediation:
      strategy: rollback
      retries: 3
  dependsOn:
    - name: onepassword-connect
      namespace: kube-system
  valuesFrom:
    - kind: ConfigMap
      name: dashboard-config-values
  values:
    image:
      repository: ghcr.io/gethomepage/homepage
      tag: v1.1.1
    fullnameOverride: *app
    env:
      LOG_LEVEL: debug
      HOMEPAGE_ALLOWED_HOSTS: '{{ .Release.Name }}.${ROOT_DOMAIN},homepage.${ROOT_DOMAIN},{{ .Release.Name }}.${TAILSCALE_DOMAIN},homepage.${TAILSCALE_DOMAIN}'
      HOMEPAGE_VAR_OPENWEATHERMAP_KEY:
        valueFrom:
          secretKeyRef:
            name: homepage-secrets
            key: openweathermap
      HOMEPAGE_VAR_UNIFI_USERNAME:
        valueFrom:
          secretKeyRef:
            name: unifi-credentials
            key: username
      HOMEPAGE_VAR_UNIFI_PASSWORD:
        valueFrom:
          secretKeyRef:
            name: unifi-credentials
            key: password
      HOMEPAGE_VAR_TRUENAS_KEY:
        valueFrom:
          secretKeyRef:
            name: truenas-credentials
            key: credential
      HOMEPAGE_VAR_HA_USERNAME:
        valueFrom:
          secretKeyRef:
            name: home-assistant-credentials
            key: username
      HOMEPAGE_VAR_HA_PASSWORD:
        valueFrom:
          secretKeyRef:
            name: home-assistant-credentials
            key: password
      HOMEPAGE_VAR_HA_APIKEY:
        valueFrom:
          secretKeyRef:
            name: home-assistant-credentials
            key: apikey
      HOMEPAGE_VAR_CLOUDFLARE_ACCOUNTID:
        valueFrom:
          secretKeyRef:
            name: cloudflare-chrysalis-tunnel
            key: accountId
      HOMEPAGE_VAR_CLOUDFLARE_TUNNEL_APIKEY:
        valueFrom:
          secretKeyRef:
            name: cloudflare-tunnel-token
            key: credential
      HOMEPAGE_VAR_CLOUDFLARE_ERIS_TUNNEL_ID:
        valueFrom:
          secretKeyRef:
            name: cloudflare-eris-tunnel
            key: username
      HOMEPAGE_VAR_CLOUDFLARE_CHRYSALIS_TUNNEL_ID:
        valueFrom:
          secretKeyRef:
            name: cloudflare-chrysalis-tunnel
            key: username
      # HOMEPAGE_VAR_TAILSCALE_ACCESS_TOKEN:
      #   valueFrom:
      #     secretKeyRef:
      #       name: tailscale-access-token
      #       key: token

    podAnnotations:
      reloader.stakater.com/auto: "true"
    # controller:
    #   strategy: Recreate

    enableRbac: true
    serviceAccount:
      create: true
    # Enable the ingress to expose Homepage to the network.
    ingress:
      main:
        enabled: true
        ingressClassName: internal
        annotations:
          reloader.stakater.com/auto: "true"
          external-dns.alpha.kubernetes.io/target: "${INTERNAL_DOMAIN}"
        hosts:
          - host: "{{ .Release.Name }}.${ROOT_DOMAIN}"
            paths:
              - path: /
                pathType: Prefix
          - host: "homepage.${ROOT_DOMAIN}"
            paths:
              - path: /
                pathType: Prefix

