---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app ersatztv
spec:
  chartRef:
    kind: OCIRepository
    name: app-template
  maxHistory: 3
  interval: 1h
  timeout: 5m
  install:
    createNamespace: true
    replace: true
    remediation:
      retries: -1
  upgrade:
    crds: CreateReplace
    cleanupOnFail: true
    remediation:
      retries: -1
      strategy: rollback
  rollback:
    force: true
    cleanupOnFail: true
    recreate: true
  uninstall:
    keepHistory: false
  dependsOn:
    - name: truenas-iscsi-stash
      namespace: democratic-csi
    - name: truenas-stash
      namespace: democratic-csi
  values:
    controllers:
      ersatztv:
        annotations:
          reloader.stakater.com/auto: "true"
        initContainers:
          restore:
            securityContext:
              allowPrivilegeEscalation: true
              readOnlyRootFilesystem: true
              runAsUser: 0
              runAsGroup: 0
              fsGroup: 0
              fsGroupChangePolicy: "OnRootMismatch"
              supplementalGroups: [0, 1, 44, 109, 303, 568, 10000]
              capabilities: { drop: ["ALL"] }
            image:
              repository: busybox
              tag: 1.37.0@sha256:ab33eacc8251e3807b85bb6dba570e4698c3998eca6f0fc2ccb60575a563ea74
              pullPolicy: IfNotPresent
            command:
              - "/bin/sh"
              - "-c"
            args: |-
              chown -R 568:568 /config
              chmod -R 777 /config
              echo "Done.";
        containers:
          ersatztv:
            image:
              repository: jasongdove/ersatztv
              tag: latest@sha256:5464348e1989be72161e1e6ef197cf1a1c403efed8090474ce1ffe501a375c37
            env:
              PUID: ${PUID}
              PGID: ${PGID}
              TZ: America/New_York
              ETV_CONFIG_FOLDER: /config
              ETV_TRANSCODE_FOLDER: /transcode
            probes:
              liveness: &probes
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /
                    port: &port 8409
                  initialDelaySeconds: 10
                  periodSeconds: 60
                  timeoutSeconds: 10
                  failureThreshold: 5
              readiness: *probes
            # securityContext:
            #   allowPrivilegeEscalation: false
            #   readOnlyRootFilesystem: false
            #   capabilities: { drop: ["ALL"] }
            resources:
              requests:
                cpu: 1000m
                memory: 500Mi
              limits:
                # nvidia.com/gpu: 1
                memory: 4Gi
                cpu: 4000m

    # tolerations:
    #   - key: nvidia.com/gpu
    #     operator: Exists
    #     effect: NoSchedule
    defaultPodOptions:
      securityContext:
        runAsUser: 568
        runAsGroup: 568
        fsGroup: 568
        fsGroupChangePolicy: "OnRootMismatch"
        supplementalGroups: [44, 109, 303, 568, 10000]
        seccompProfile: { type: RuntimeDefault }
      # nodeSelector:
      #   intel.feature.node.kubernetes.io/gpu: "true"

    service:
      app:
        controller: ersatztv
        type: ClusterIP
        ports:
          http:
            port: *port

    ingress:
      internal:
        className: internal
        hosts:
          - host: "${APP}.${ROOT_DOMAIN}"
            paths:
              - path: /
                pathType: Prefix
                service:
                  identifier: app
                  port: *port
        annotations:
          reloader.stakater.com/auto: "true"
          external-dns.alpha.kubernetes.io/target: "${INTERNAL_DOMAIN}"
          gethomepage.dev/widget.type: url
          gethomepage.dev/widget.url: "http://${APP}.${INTERNAL_CLUSTER_SERVICE}:8409"
          gethomepage.dev/enabled: "true"
          gethomepage.dev/group: Media Management
          gethomepage.dev/icon: ersatztv.svg
          gethomepage.dev/name: ErsatzTV
          gethomepage.dev/namespace: "{{ .Release.Namespace }}" # The kubernetes namespace the app resides in
          gethomepage.dev/app: "${APP}"


    persistence:
      config:
        existingClaim: ersatztv-config
        globalMounts:
          - path: /config

      transcode:
        enabled: true
        type: emptyDir
        globalMounts:
          - path: /transcode

      media-movies:
        existingClaim: media-movies
        globalMounts:
          - path: /media/movies

      media-tv:
        existingClaim: media-tv
        globalMounts:
          - path: /media/tv
