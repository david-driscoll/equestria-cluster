---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app nzbget
spec:
  timeout: 5m
  interval: 30m
  chartRef:
    kind: OCIRepository
    name: app-template
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  dependsOn:
    - name: truenas-iscsi-stash
      namespace: democratic-csi
    - name: truenas-stash
      namespace: democratic-csi
  values:
    fullnameOverride: *app
    controllers:
      app:
        annotations:
          reloader.stakater.com/auto: "true"
        strategy: Recreate
        containers:
          app:
            image:
              repository: nzbgetcom/nzbget
              tag: v24.8
              pullPolicy: Always
            # -- environment variables.
            # See [image docs](https://github.com/dani-garcia/vaultwarden/blob/main/.env.template) for more details.
            env:
              PUID: 568
              PGID: 568
              TZ: America/New_York
            securityContext:
              allowPrivilegeEscalation: true
              readOnlyRootFilesystem: false
            resources:
              requests:
                cpu: 100m
                memory: 500Mi
              limits:
                cpu: 2000m
                memory: 6Gi

    defaultPodOptions:
      securityContext:
        runAsNonRoot: false
        runAsUser: 0
        runAsGroup: 568
        fsGroup: 568
        fsGroupChangePolicy: OnRootMismatch
        supplementalGroups: [0, 1, 44, 109, 303, 568, 10000]
        seccompProfile: { type: RuntimeDefault }

    # -- Configures service settings for the chart.
    service:
      app:
        controller: app
        type: ClusterIP
        ports:
          http:
            port: &port 6789

    persistence:
      temp:
        type: emptyDir
        globalMounts:
          - path: /temp
      media-nzb:
        existingClaim: media-nzb
        globalMounts:
          - path: /media/nzb
      queue:
        type: persistentVolumeClaim
        storageClass: truenas-stash
        accessMode: ReadWriteOnce
        size: 1Gi
        globalMounts:
          - path: /queue
      secret:
        type: secret
        name: nzbget-config
        globalMounts:
          - path: /config/nzbget.conf
            subPath: nzbget.conf
      media-downloads:
        existingClaim: media-downloads
        globalMounts:
          - path: /media/downloads
    ingress:
      internal:
        className: internal
        hosts:
          - host: "{{ .Release.Name }}.${ROOT_DOMAIN}"
            paths:
              - path: /
                service:
                  identifier: app
                  port: *port
        annotations:
          reloader.stakater.com/auto: "true"
          external-dns.alpha.kubernetes.io/target: "${INTERNAL_DOMAIN}"
          gethomepage.dev/widget.url: "http://{{ .Release.Name }}.${INTERNAL_CLUSTER_SERVICE}:6789"
          # gethomepage.dev/widget.key: "${nzbget_restricted_password}"
          gethomepage.dev/enabled: "true"
          gethomepage.dev/group: Media Management
          gethomepage.dev/icon: nzbget.png
          gethomepage.dev/name: Nzbget
          gethomepage.dev/widget.type: nzbget
          gethomepage.dev/widget.username: "nzbget"
          gethomepage.dev/namespace: "{{ .Release.Namespace }}" # The kubernetes namespace the app resides in
          gethomepage.dev/app: "{{ .Release.Name }}"
      tailscale:
        className: tailscale
        annotations:
          reloader.stakater.com/auto: "true"
          tailscale.com/hostname: *app
        defaultBackend:
          service:
            name: *app
            port:
              number: *port
          hosts:
            - hosts:
                - *app
