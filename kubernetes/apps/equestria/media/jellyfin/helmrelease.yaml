---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app jellyfin
spec:
  chartRef:
    kind: OCIRepository
    name: app-template
  maxHistory: 3
  interval: 1h
  timeout: 1h
  install:
    createNamespace: true
    replace: true
    remediation:
      retries: -1
  upgrade:
    crds: CreateReplace
    cleanupOnFail: true
    remediation:
      retries: -1
      strategy: rollback
  rollback:
    force: true
    cleanupOnFail: true
    recreate: true
  uninstall:
    keepHistory: false
  dependsOn:
    - name: spike-volumes
      namespace: equestria
  values:
    controllers:
      *app :
        annotations:
          reloader.stakater.com/auto: "true"
        containers:
          jellyfin:
            image:
              repository: jellyfin/jellyfin
              tag: 10.11.0@sha256:59417f441213e236a9f907d4e71a13472042409d85f9e9310dbdd87ee33d7bd4
            env:
              JELLYFIN_CACHE_DIR: /cache
              JELLYFIN_CONFIG_DIR: /config/config
              JELLYFIN_DATA_DIR: /config
              JELLYFIN_FFMPEG: /usr/lib/jellyfin-ffmpeg/ffmpeg
              JELLYFIN_LOG_DIR: /logs
              JELLYFIN_PublishedServerUrl: "https://${APP}.${ROOT_DOMAIN}"
              # JELLYFIN_WEB_DIR: /usr/share/jellyfin/web
              DOTNET_SYSTEM_IO_DISABLEFILELOCKING: "true"
              # JELLYFIN_FFmpeg__probesize: 50000000
              # JELLYFIN_FFmpeg__analyzeduration: 50000000
              PUID: ${PUID}
              PGID: ${PGID}
              TZ: America/New_York
            probes:
              liveness: &probes
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /health
                    port: &port 8096
                  initialDelaySeconds: 10
                  periodSeconds: 60
                  timeoutSeconds: 10
                  failureThreshold: 5
              readiness: *probes
            # securityContext:
            #   allowPrivilegeEscalation: false
            #   readOnlyRootFilesystem: false
            #   capabilities: { drop: ["ALL"] }
            resources:
              requests:
                gpu.intel.com/i915: 1
                cpu: 1
                memory: 1Gi
              limits:
                gpu.intel.com/i915: 1
                memory: 4Gi
                cpu: 4

    # tolerations:
    #   - key: nvidia.com/gpu
    #     operator: Exists
    #     effect: NoSchedule
    # defaultPodOptions:
    #   securityContext:
    #     runAsNonRoot: true
    #     runAsUser: 568
    #     runAsGroup: 568
    #     fsGroup: 568
    #     fsGroupChangePolicy: OnRootMismatch
    #     supplementalGroups: [44, 109, 10000]
    #     seccompProfile: { type: RuntimeDefault }
    # nodeSelector:
    #   intel.feature.node.kubernetes.io/gpu: "true"

    service:
      app:
        controller: jellyfin
        type: ClusterIP
        ports:
          http:
            port: *port
    ingress:
      internal:
        className: internal
        hosts:
          - host: "${APP}.${ROOT_DOMAIN}"
            paths:
              - path: /
                pathType: Prefix
                service:
                  identifier: app
                  port: *port
        annotations:
          reloader.stakater.com/auto: "true"
          external-dns.alpha.kubernetes.io/target: "${INTERNAL_DOMAIN}"
          gethomepage.dev/widget.type: jellyfin
          gethomepage.dev/widget.url: "http://${APP}.${INTERNAL_CLUSTER_SERVICE}:8096"
          # gethomepage.dev/widget.key: "${jellyfin_token}"
          gethomepage.dev/widget.enableBlocks: "true"
          gethomepage.dev/widget.enableNowPlaying: "true"
          gethomepage.dev/widget.enableUser: "true"
          gethomepage.dev/widget.showEpisodeNumber: "true"
          gethomepage.dev/widget.expandOneStreamToTwoRows: "true"
          gethomepage.dev/enabled: "true"
          gethomepage.dev/group: Media
          gethomepage.dev/icon: jellyfin.svg
          gethomepage.dev/name: Jellyfin
          gethomepage.dev/namespace: "{{ .Release.Namespace }}" # The kubernetes namespace the app resides in
          gethomepage.dev/app: "${APP}"


    persistence:
      config:
        existingClaim: *app
        globalMounts:
          - path: /config

      transcode:
        enabled: true
        type: emptyDir
        globalMounts:
          - path: /transcode

      cache:
        enabled: true
        type: emptyDir
        globalMounts:
          - path: /cache

      logs:
        enabled: true
        type: emptyDir
        globalMounts:
          - path: /logs

      spike-movies:
        existingClaim: spike-movies
        globalMounts:
          - path: /media/movies

      spike-tv:
        existingClaim: spike-tv
        globalMounts:
          - path: /media/tv

      spike-dvr:
        existingClaim: spike-dvr
        globalMounts:
          - path: /media/dvr

