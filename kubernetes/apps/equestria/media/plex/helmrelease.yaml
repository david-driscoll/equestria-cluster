---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app plex
spec:
  chartRef:
    kind: OCIRepository
    name: app-template
  maxHistory: 3
  interval: 1h
  timeout: 1h
  install:
    createNamespace: true
    replace: true
    remediation:
      retries: -1
  upgrade:
    crds: CreateReplace
    cleanupOnFail: true
    remediation:
      retries: -1
      strategy: rollback
  rollback:
    force: true
    cleanupOnFail: true
    recreate: true
  uninstall:
    keepHistory: false
  dependsOn:
    - name: truenas-iscsi-stash
      namespace: democratic-csi
    - name: truenas-stash
      namespace: democratic-csi
  values:
    controllers:
      *app :
        annotations:
          reloader.stakater.com/auto: "true"
        initContainers:
          restic:
            image:
              repository: ghcr.io/restic/restic
              tag: master
              pullPolicy: Always
            command: ["/bin/sh", "-c", "restic backup /config/"]
            env:
              PUID: 568
              PGID: 568
              UMASK: 002
              TZ: ${TIMEZONE}
              RESTIC_REPOSITORY: '/volsync/emby'
              RESTIC_PASSWORD:
                valueFrom:
                  secretKeyRef:
                    name: "${APP}-volsync-secret"
                    key: credential
            securityContext:
              runAsNonRoot: true
              runAsUser: 568
              runAsGroup: 568
              fsGroup: 568
              fsGroupChangePolicy: "OnRootMismatch"
              supplementalGroups: [0, 1, 44, 109, 303, 568, 10000]
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: false
              capabilities: { drop: ["ALL"] }
            resources:
              requests:
                cpu: 50m
                memory: 100Mi
              limits:
                cpu: 500m
                memory: 2Gi
        containers:
          *app :
            image:
              repository: ghcr.io/home-operations/plex
              tag: 1.41.8@sha256:40e620ffcdc65331a0c2a7ed9a95700da7d527244f33c21bd35fc30aa25f19ea
            env:
              TZ: America/New_York
              PUID: 568
              PGID: 568
              PLEX_ADVERTISE_URL: https://${APP}.${ROOT_DOMAIN}:443,https://plex.${CLUSTER_DOMAIN}:443,https://${APP}.${TAILSCALE_DOMAIN}:443,http://${APP}.${INTERNAL_CLUSTER_SERVICE}:32400
              PLEX_NO_AUTH_NETWORKS: 172.16.0.0/12,10.10.0.0/16,10.69.0.0/16,10.96.0.0/16,192.168.0.0/16,100.64.0.0/10
              PLEX_PURGE_CODECS: "true"
              # PLEX_PREFERENCE_FriendlyName: "Eris Plex"
              # PLEX_PREFERENCE_AcceptedEULA: "1"
              # PLEX_PREFERENCE_PublishServerOnPlexOnlineKey: "1"
              # PLEX_PREFERENCE_PlexOnlineHome: "1"
              # PLEX_PREFERENCE_DlnaEnabled: "1"
              # PLEX_PREFERENCE_PlexOnlineUsername:
              #   secretKeyRef:
              #     name: plex-token
              #     key: username
              # PLEX_PREFERENCE_PlexOnlineMail:
              #   secretKeyRef:
              #     name: plex-token
              #     key: email
              # PLEX_CLAIM_TOKEN:
              #   secretKeyRef:
              #     name: media-management-credentials
              #     key: claim
            probes:
              liveness: &probes
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /identity
                    port: &port 32400
                  initialDelaySeconds: 10
                  periodSeconds: 60
                  timeoutSeconds: 10
                  failureThreshold: 5
              readiness: *probes
            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
              # capabilities: { drop: ["ALL"] }
            resources:
              requests:
                # gpu.intel.com/i915: 1
                cpu: 100m
                memory: 1Gi
              limits:
                # gpu.intel.com/i915: 1
                # amd.com/gpu: 1
                memory: 6Gi
                cpu: 4000m

    # tolerations:
    #   - key: amd.com/gpu
    #     operator: Exists
    #     effect: NoSchedule
    defaultPodOptions:
      securityContext:
        runAsUser: 568
        runAsGroup: 568
        fsGroup: 568
        fsGroupChangePolicy: "OnRootMismatch"
        supplementalGroups: [44, 109, 303, 568, 10000]
        seccompProfile: { type: RuntimeDefault }
      # nodeSelector:
      #   intel.feature.node.kubernetes.io/gpu: "true"

    service:
      app:
        controller: plex
        type: ClusterIP
        ports:
          http:
            port: *port

    ingress:
      internal:
        className: internal
        hosts:
          - host: "${APP}.${ROOT_DOMAIN}"
            paths:
              - path: /
                pathType: Prefix
                service:
                  identifier: app
                  port: *port
          - host: "plex.${CLUSTER_DOMAIN}"
            paths:
              - path: /
                pathType: Prefix
                service:
                  identifier: app
                  port: *port
        annotations:
          reloader.stakater.com/auto: "true"
          external-dns.alpha.kubernetes.io/target: "${INTERNAL_DOMAIN}"
          gethomepage.dev/widget.url: "http://${APP}.${INTERNAL_CLUSTER_SERVICE}:32400"
          # gethomepage.dev/widget.key: "${plex_token}"
          gethomepage.dev/enabled: "true"
          gethomepage.dev/group: Media
          gethomepage.dev/icon: plex.svg
          gethomepage.dev/name: Plex
          gethomepage.dev/widget.type: plex
          gethomepage.dev/namespace: "{{ .Release.Namespace }}" # The kubernetes namespace the app resides in
          gethomepage.dev/app: "${APP}"


    persistence:
      config:
        existingClaim: plex-config
        globalMounts:
          - path: /config
      media-movies:
        existingClaim: media-movies
        globalMounts:
          - path: /media/movies
      media-tv:
        existingClaim: media-tv
        globalMounts:
          - path: /media/tv
      media-dvr:
        existingClaim: media-dvr
        globalMounts:
          - path: /media/dvr
      logs:
        type: emptyDir
        globalMounts:
          - path: /config/Library/Application Support/Plex Media Server/Logs
      tmp:
        type: emptyDir
      transcode:
        type: emptyDir
      cache:
        type: persistentVolumeClaim
        storageClass: truenas-stash
        accessMode: ReadWriteOnce
        size: 100Gi
        globalMounts:
          - path: /config/Library/Application Support/Plex Media Server/Cache
            subPath: cache
      # current-config:
      #   existingClaim: plex-config
      #   globalMounts:
      #     - path: /database

      volsync:
        type: nfs
        server: ${SPIKE_IP}
        path: /mnt/stash/backup/volsync
        advancedMounts:
          *app :
            restic:
              - path: /volsync
