---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/app-template-4.2.0/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app homarr
spec:
  chartRef:
    kind: OCIRepository
    name: app-template
  maxHistory: 3
  interval: 15m
  timeout: 10m
  install:
    createNamespace: true
    replace: true
    remediation:
      retries: 7
  upgrade:
    crds: CreateReplace
    cleanupOnFail: true
    remediation:
      retries: 7
      strategy: rollback
  rollback:
    force: true
    cleanupOnFail: true
    recreate: true
  uninstall:
    keepHistory: false
  values:
    controllers:
      *app :
        annotations:
          reloader.stakater.com/auto: "true"
        replicas: 1
        pod:
          securityContext:
            runAsNonRoot: false
            fsGroupChangePolicy: "OnRootMismatch"
        containers:
          *app :
            image:
              repository: ghcr.io/homarr-labs/homarr
              tag: v1.43.1@sha256:a370e506348d3f796da3ef5c3519fc2183541c20ca4f082f0804c696f289a048
            envFrom:
              - secretRef:
                  name: ${APP}-env
            resources:
              requests:
                cpu: 200m
                memory: 256Mi
              limits:
                cpu: 2
                memory: 1Gi
            probes:
              liveness: &probes
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /api/health/ready
                    port: &port 3000
                  initialDelaySeconds: 10
                  periodSeconds: 10
                  timeoutSeconds: 1
                  failureThreshold: 3
              readiness: *probes
            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: false
              capabilities: { drop: ["ALL"] }

    defaultPodOptions:
      securityContext:
        runAsNonRoot: false
        fsGroupChangePolicy: OnRootMismatch
        seccompProfile: { type: RuntimeDefault }

    persistence:
      appdata:
        existingClaim: *app

    service:
      app:
        controller: *app
        type: ClusterIP
        ports:
          http:
            port: *port

    route:
      internal:
        parentRefs:
          - name: internal
            namespace: network
            kind: Gateway
        hostnames:
          - "${APP}.${ROOT_DOMAIN}"
        kind: HTTPRoute
        rules:
          - backendRefs:
              - identifier: app
                port: *port
    serviceAccount:
      *app : {}
    secrets:
      *app :
        type: kubernetes.io/service-account-token
        annotations:
          kubernetes.io/service-account.name: *app
        stringData:
          token: ""
          certificate: ""
    rbac:
      roles:
        homarr:
          type: ClusterRole
          rules:
            - apiGroups: [ "" ]
              resources: [ "pods", "services", "secrets", "configmaps", "persistentvolumeclaims", "namespaces", "persistentvolumes", "nodes" ]
              verbs: [ "get", "list", "watch", "use" ]
            - apiGroups: [ "apps" ]
              resources: [ "deployments" ]
              verbs: [ "get", "list", "watch" ]
            - apiGroups: [ "networking.k8s.io" ]
              resources: [ "ingresses" ]
              verbs: [ "get", "list", "watch" ]
            - apiGroups: [ "metrics.k8s.io" ]
              resources: [ "nodes", "pods" ]
              verbs: [ "get", "list", "watch" ]
      bindings:
        homarr:
          type: ClusterRoleBinding
          roleRef:
            apiGroup: rbac.authorization.k8s.io
            kind: ClusterRole
            name: homarr
          subjects:
            - kind: ServiceAccount
              name: *app
              namespace: ${NAMESPACE}
