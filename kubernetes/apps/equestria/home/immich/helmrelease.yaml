# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/app-template-4.1.2/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app immich
spec:
  chartRef:
    kind: OCIRepository
    name: app-template
  maxHistory: 3
  interval: 15m
  timeout: 5m
  install:
    createNamespace: true
    replace: true
    remediation:
      retries: 7
  upgrade:
    crds: CreateReplace
    cleanupOnFail: true
    remediation:
      retries: 7
      strategy: rollback
  rollback:
    force: true
    cleanupOnFail: true
    recreate: true
  uninstall:
    keepHistory: false
  dependsOn: []
  values:
    controllers:
      *app :
        annotations:
          reloader.stakater.com/auto: "true"
        replicas: 1
        pod:
          securityContext:
            runAsNonRoot: true
            fsGroupChangePolicy: "OnRootMismatch"
        containers:
          *app :
            image:
              repository: ghcr.io/immich-app/immich-server
              tag: latest
            envFrom:
              - secretRef:
                  name: ${APP}-env
            securityContext:
              runAsNonRoot: true
              runAsUser: 568
              runAsGroup: 568
              fsGroup: 568
              fsGroupChangePolicy: "OnRootMismatch"
              supplementalGroups: [0, 1, 44, 109, 303, 568, 10000]
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: false
              capabilities: { drop: ["ALL"] }
            resources:
              requests:
                cpu: 100m
                memory: 256Mi
              limits:
                cpu: 1
                memory: 2Gi
          machine-learning:
            image:
              repository: ghcr.io/immich-app/immich-machine-learning
              tag: latest
            envFrom:
              - secretRef:
                  name: ${APP}-env
            securityContext:
              runAsNonRoot: true
              runAsUser: 568
              runAsGroup: 568
              fsGroup: 568
              fsGroupChangePolicy: "OnRootMismatch"
              supplementalGroups: [0, 1, 44, 109, 303, 568, 10000]
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: false
              capabilities: { drop: ["ALL"] }
            resources:
              requests:
                cpu: 100m
                memory: 256Mi
              limits:
                cpu: 2
                memory: 2Gi

    defaultPodOptions:
      securityContext:
        runAsUser: 568
        runAsGroup: 568
        fsGroup: 568
        fsGroupChangePolicy: "OnRootMismatch"
        supplementalGroups: [44, 109, 303, 568, 10000]
        seccompProfile: { type: RuntimeDefault }

    persistence:
      data:
        existingClaim: immich-data
      mc-cache:
        existingClaim: *app
      config:
        type: secret
        name: ${APP}-config
        globalMounts:
          - path: /etc/immich/config.json
            subPath: config.json

    service:
      machine-learning:
        controller: *app
        type: ClusterIP
        ports:
          http:
            port: 3003
      app:
        controller: *app
        type: ClusterIP
        ports:
          http:
            port: &port 3001  # Immich server port

    ingress:
      internal:
        className: internal
        hosts:
          - host: "${APP}.${ROOT_DOMAIN}"
            paths:
              - path: /
                pathType: Prefix
                service:
                  identifier: app
                  port: http
          - host: "photos.${ROOT_DOMAIN}"
            paths:
              - path: /
                pathType: Prefix
                service:
                  identifier: app
                  port: http
