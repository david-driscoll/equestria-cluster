---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/app-template-4.2.0/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app homechart
spec:
  chartRef:
    kind: OCIRepository
    name: app-template
  maxHistory: 3
  interval: 15m
  timeout: 10m
  install:
    createNamespace: true
    replace: true
    remediation:
      retries: 7
  upgrade:
    crds: CreateReplace
    cleanupOnFail: true
    remediation:
      retries: 7
      strategy: rollback
  rollback:
    force: true
    cleanupOnFail: true
    recreate: true
  uninstall:
    keepHistory: false
  values:
    controllers:
      *app :
        annotations:
          reloader.stakater.com/auto: "true"
        replicas: 1
        pod:
          securityContext:
            runAsNonRoot: false
            fsGroupChangePolicy: "OnRootMismatch"
        initContainers:
          config:
            image:
              repository: ghcr.io/candiddev/homechart
              tag: v2025.10.27@sha256:7f611cd070138397c18c94a58bf9d3f85845fa4481510e1c8a5d76a4a65347b6
            env:
              TZ: "${TIMEZONE}"
              homechart_cli_configPath: /config/config.json
            args:
              - config
            resources:
              requests:
                cpu: 100m
                memory: 256Mi
              limits:
                cpu: 500m
                memory: 1Gi
            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
              capabilities: { drop: ["ALL"] }
        containers:
          *app :
            image:
              repository: ghcr.io/candiddev/homechart
              tag: v2025.10.27@sha256:7f611cd070138397c18c94a58bf9d3f85845fa4481510e1c8a5d76a4a65347b6
            env:
              TZ: "${TIMEZONE}"
              homechart_cli_configPath: /config/config.json
            resources:
              requests:
                cpu: 100m
                memory: 256Mi
              limits:
                cpu: 500m
                memory: 1Gi
            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
              capabilities: { drop: ["ALL"] }

    defaultPodOptions:
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
        fsGroupChangePolicy: OnRootMismatch
        seccompProfile: { type: RuntimeDefault }

    persistence:
      config:
        type: secret
        name: ${APP}-config
        defaultMode: 493
        globalMounts:
          - path: /config/
            readOnly: true

    service:
      app:
        controller: *app
        type: ClusterIP
        ports:
          http:
            port: &port 3000

    route:
      internal:
        parentRefs:
          - name: internal
            namespace: network
            kind: Gateway
        hostnames:
          - "${APP}.${ROOT_DOMAIN}"
        kind: HTTPRoute
        rules:
          - backendRefs:
              - identifier: app
                port: *port
