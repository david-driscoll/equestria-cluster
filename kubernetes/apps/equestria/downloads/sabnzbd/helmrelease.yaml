---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app sabnzbd
spec:
  chartRef:
    kind: OCIRepository
    name: app-template
  maxHistory: 3
  interval: 1h
  timeout: 10m
  install:
    createNamespace: true
    replace: true
    remediation:
      retries: -1
  upgrade:
    crds: CreateReplace
    cleanupOnFail: true
    remediation:
      retries: -1
      strategy: rollback
  rollback:
    force: true
    cleanupOnFail: true
    recreate: true
  uninstall:
    keepHistory: false
  values:
    fullnameOverride: *app
    controllers:
      app:
        annotations:
          reloader.stakater.com/auto: "true"
        strategy: Recreate
        containers:
          app:
            image:
              repository: ghcr.io/home-operations/sabnzbd
              tag: 4.5.5@sha256:da57e01cdebc547852b6df85c8df8c0e4d87792742c7608c5590dc653b184e8c
              pullPolicy: IfNotPresent
            # -- environment variables.
            # See [image docs](https://github.com/dani-garcia/vaultwarden/blob/main/.env.template) for more details.
            env:
              TZ: ${TIMEZONE}
              SABNZBD__PORT: &port 8080
              SABNZBD__HOST_WHITELIST_ENTRIES: >-
                ${APP},
                ${APP}.${CLUSTER_CNAME},
                ${APP}.${CLUSTER_CNAME}.svc,
                ${APP}.${CLUSTER_CNAME}.svc.cluster,
                ${APP}.${CLUSTER_CNAME}.svc.cluster.local,
                ${APP}.${ROOT_DOMAIN}
            probes:
              liveness: &probes
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /api?mode=version
                    port: *port
                  initialDelaySeconds: 0
                  periodSeconds: 10
                  timeoutSeconds: 1
                  failureThreshold: 3
              readiness: *probes
            securityContext:
              runAsNonRoot: true
              runAsUser: 568
              runAsGroup: 568
              fsGroup: 568
              fsGroupChangePolicy: "OnRootMismatch"
              supplementalGroups: [0, 1, 44, 109, 303, 568, 10000]
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: false
              capabilities: { drop: ["ALL"] }
            resources:
              requests:
                cpu: 100m
                memory: 100Mi
              limits:
                cpu: 2000m
                memory: 3Gi

    defaultPodOptions:
      securityContext:
        fsGroupChangePolicy: OnRootMismatch
        seccompProfile: { type: RuntimeDefault }

    # -- Configures service settings for the chart.
    service:
      app:
        controller: app
        type: ClusterIP
        ports:
          http:
            port: *port

    persistence:
      config:
        existingClaim: ${APP}
      incomplete:
        type: emptyDir
      tmp:
        type: emptyDir
      spike-media-downloads:
        existingClaim: spike-media-downloads
        globalMounts:
          - path: /media/downloads
---
# yaml-language-server: $schema=https://raw.githubusercontent.com/datreeio/CRDs-catalog/refs/heads/main/traefik.io/ingressroute_v1alpha1.json
apiVersion: traefik.io/v1alpha1
kind: IngressRoute
metadata:
  name: ${APP}-internal
  annotations:
    reloader.stakater.com/auto: "true"
    external-dns.alpha.kubernetes.io/target: "${INTERNAL_DOMAIN}"
    kubernetes.io/ingress.class: internal
spec:
  entryPoints:
    - websecure
  routes:
    - match: Host(`${APP}.${ROOT_DOMAIN}`) && QueryRegexp(`apikey`, `^.*$`)
      kind: Rule
      priority: -1
      services:
        - name: ${APP}
          port: http
          passHostHeader: true
      middlewares:
        - name: local-user
          namespace: network
    - match: Host(`${APP}.${ROOT_DOMAIN}`)
      kind: Rule
      priority: -2
      services:
        - name: ${APP}
          port: http
          passHostHeader: true
      middlewares:
        - name: authenticated-user
          namespace: network
