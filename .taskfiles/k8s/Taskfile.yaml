---
# yaml-language-server: $schema=https://taskfile.dev/schema.json
version: "3"

tasks:
  cleanup-pods:
    desc: Clean up pods with a Failed/Pending/Succeeded phase
    preconditions:
      - which kubectl
    cmds:
      - for:
          matrix:
            PHASE:
              - Failed
              - Succeeded
        cmd: kubectl delete pods --field-selector status.phase={{.ITEM.PHASE}} -A --ignore-not-found=true

  volsync-unlock:
    desc: Unlock a VolSync Restic repository
    summary: |
      This task creates a temporary pod to unlock a VolSync Restic repository that may be locked
      due to interrupted backup processes. The pod will run the 'restic unlock' command and then
      be automatically cleaned up.

      Usage:
        task k8s:volsync:unlock APP=<app-name> NAMESPACE=<namespace>

      Examples:
        task k8s:volsync:unlock APP=jellyfin NAMESPACE=equestria
        task k8s:volsync:unlock APP=postgres NAMESPACE=database

      The task will:
      1. Create a temporary pod with Restic CLI and necessary credentials
      2. Run 'restic unlock' against the specified repository
      3. Automatically clean up the pod when done
    vars:
      POD_NAME: volsync-unlock-{{.APP}}-{{now | date "20060102-150405"}}
      SECRET_NAME: "{{.APP}}-volsync-secret"
    preconditions:
      - test -n "{{.APP}}"
      - test -n "{{.NAMESPACE}}"
      - which kubectl
    cmds:
      - |
        echo "Creating unlock pod for {{.APP}} in namespace {{.NAMESPACE}}..."
        kubectl apply -f - <<EOF
        apiVersion: v1
        kind: Pod
        metadata:
          name: {{.POD_NAME}}
          namespace: {{.NAMESPACE}}
          labels:
            app.kubernetes.io/name: volsync-unlock
            app.kubernetes.io/instance: {{.APP}}
        spec:
          restartPolicy: Never
          containers:
          - name: restic
            image: docker.io/restic/restic:0.16.4
            command: ["/bin/sh"]
            args: ["-c", "restic unlock && echo 'Repository unlocked successfully'"]
            env:
            - name: RESTIC_REPOSITORY
              valueFrom:
                secretKeyRef:
                  name: {{.SECRET_NAME}}
                  key: RESTIC_REPOSITORY
            - name: RESTIC_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{.SECRET_NAME}}
                  key: RESTIC_PASSWORD
            - name: AWS_ACCESS_KEY_ID
              valueFrom:
                secretKeyRef:
                  name: spike-access-key
                  key: AWS_ACCESS_KEY_ID
            - name: AWS_SECRET_ACCESS_KEY
              valueFrom:
                secretKeyRef:
                  name: spike-access-key
                  key: AWS_SECRET_ACCESS_KEY
        EOF
      - |
        echo "Waiting for unlock pod to complete..."
        kubectl wait --for=condition=Ready pod/{{.POD_NAME}} -n {{.NAMESPACE}} --timeout=60s
        kubectl wait --for=condition=ContainersReady=false pod/{{.POD_NAME}} -n {{.NAMESPACE}} --timeout=300s
      - |
        echo "Checking unlock results..."
        kubectl logs pod/{{.POD_NAME}} -n {{.NAMESPACE}}
      - defer: |
          echo "Cleaning up unlock pod..."
          kubectl delete pod {{.POD_NAME}} -n {{.NAMESPACE}} --ignore-not-found=true
